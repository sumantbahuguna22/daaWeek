package com.packages;
import java.util.Arrays;
import java.util.Scanner;
public class Main {
    public static void quickSort(int[] arr, int low, int high) {
        if (low < high) {
            int pi = partition(arr, low, high);
            quickSort(arr, low, pi - 1);
            quickSort(arr, pi + 1, high);
        }
    }
    public static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    public static int partition(int[] arr, int low, int high) {
        int pviot = arr[high];
        int j = low - 1;
        for (int i = low; i < high; i++) {
            if (arr[i] < pviot) {
                j++;
                swap(arr, i, j);
            }
        }
        swap(arr, j + 1, high);
        return j + 1;
    }
    public static void sumPair(int[] arr, int key) {
        int i = 0;
        int j = arr.length - 1;
        int flag = 0;
        while (i < j) {
            if (arr[i] + arr[j] == key) {
                System.out.println(arr[i] + " " + arr[j]);
                flag = 1;
                i++;
                j--;
            } else if (arr[i] + arr[j] < key) { i++;
            } else if (arr[i] + arr[j] > key) { j--; }
        }
        if (flag == 0) 
            System.out.println("No such element exist !");
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter no of test cases : ");
        int tc = sc.nextInt();
        int i = 0;
        while (i < tc) {
            System.out.print("Enter the size of array : ");
            int size = sc.nextInt();
            int[] arr = new int[size];
            int n = arr.length;
            System.out.print("Enter the array Element : ");
            for (int j = 0; j < n; j++) {
                arr[j] = sc.nextInt();
            }
            quickSort(arr, 0, arr.length - 1);
            System.out.print("Enter the sum : ");
            int key = sc.nextInt();
            sumPair(arr, key);
            i++;
        }
    }
}
